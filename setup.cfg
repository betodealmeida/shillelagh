# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = shillelagh
description = Making it easy to query APIs via SQL
author = Beto Dealmeida
author-email = roberto@dealmeida.net
license = mit
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
url = https://github.com/betodealmeida/shillelagh/
project-urls =
     Documentation = https://shillelagh.readthedocs.io/
#    Documentation = https://pyscaffold.org/
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: SQL


[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.2a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
# install_requires = numpy; scipy
install_requires =
    importlib-metadata; python_version<"3.10"
    apsw>=3.9.2
    python_dateutil>=2.8.1
    requests>=2.31.0
    requests-cache>=0.7.1
    sqlalchemy>=1.3
    greenlet>=2.0.2  # needed for Python 3.11 w/o memory leak
    typing_extensions>=3.7.4.3
    packaging
# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*
python_requires = >=3.8

obsoletes =
    gsheetsdb

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install shillelagh[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    PyYAML>=5.4
    appdirs>=1.4.4
    beautifulsoup4>=4.11.1
    boto3>=1.24.28
    codespell>=2.1.0
    defusedxml>=0.7.1
    dill>=0.3.6
    freezegun>=1.1.0
    google-auth>=1.23.0
    holidays>=0.23
    html5lib>=1.1
    pandas>=1.2.2
    pip-tools>=6.4.0
    pre-commit>=2.13.0
    prison>=0.2.1
    prompt_toolkit>=3
    psutil>=5.8.0
    pyfakefs>=4.3.3
    pygments>=2.8
    pylint>=2.16.2
    pytest-cov>=2.11.1
    pytest-integration==0.2.2
    pytest-mock>=3.5.1
    pytest>=7.2.0
    python-jsonpath>=0.10.3
    requests-mock>=1.8.0
    tabulate==0.8.9
    yarl>=1.8.1
all =
    PyYAML>=5.4
    appdirs>=1.4.4
    beautifulsoup4>=4.11.1
    boto3>=1.24.28
    defusedxml>=0.7.1
    google-auth>=1.23.0
    holidays>=0.23
    html5lib>=1.1
    pandas>=1.2.2
    prison>=0.2.1
    prompt_toolkit>=3
    psutil>=5.8.0
    pygments>=2.8
    python-jsonpath>=0.10.3
    tabulate==0.8.9
    yarl>=1.8.1
docs =
    sphinx>=4.0.1
console =
    PyYAML>=5.4
    appdirs>=1.4.4
    prompt_toolkit>=3
    pygments>=2.8
    tabulate==0.8.9
genericjsonapi =
    prison>=0.2.1
    python-jsonpath>=0.10.3
    yarl>=1.8.1
genericxmlapi =
    defusedxml>=0.7.1
    prison>=0.2.1
    yarl>=1.8.1
githubapi =
    python-jsonpath>=0.10.3
gsheetsapi =
    google-auth>=1.23.0
holidaysmemory =
    holidays>=0.23
htmltableapi =
    beautifulsoup4>=4.11.1
    html5lib>=1.1
    pandas>=1.2.2
pandasmemory =
    pandas>=1.2.2
s3selectapi =
    boto3>=1.24.28
systemapi =
    psutil>=5.8.0

[options.entry_points]
# Add here console scripts like:
shillelagh.adapter =
    csvfile = shillelagh.adapters.file.csvfile:CSVFile
    datasetteapi = shillelagh.adapters.api.datasette:DatasetteAPI
    genericjsonapi = shillelagh.adapters.api.generic_json:GenericJSONAPI
    genericxmlapi = shillelagh.adapters.api.generic_xml:GenericXMLAPI
    githubapi = shillelagh.adapters.api.github:GitHubAPI
    gsheetsapi = shillelagh.adapters.api.gsheets.adapter:GSheetsAPI
    holidaysmemory = shillelagh.adapters.memory.holidays:HolidaysMemory
    htmltableapi = shillelagh.adapters.api.html_table:HTMLTableAPI
    pandasmemory = shillelagh.adapters.memory.pandas:PandasMemory
    presetapi = shillelagh.adapters.api.preset:PresetAPI
    presetworkspaceapi = shillelagh.adapters.api.preset:PresetWorkspaceAPI
    s3selectapi = shillelagh.adapters.api.s3select:S3SelectAPI
    socrataapi = shillelagh.adapters.api.socrata:SocrataAPI
    systemapi = shillelagh.adapters.api.system:SystemAPI
    weatherapi = shillelagh.adapters.api.weatherapi:WeatherAPI
sqlalchemy.dialects =
    shillelagh = shillelagh.backends.apsw.dialects.base:APSWDialect
    shillelagh.apsw = shillelagh.backends.apsw.dialects.base:APSWDialect
    shillelagh.safe = shillelagh.backends.apsw.dialects.safe:APSWSafeDialect
    gsheets = shillelagh.backends.apsw.dialects.gsheets:APSWGSheetsDialect
console_scripts =
    shillelagh = shillelagh.console:main
# For example:
# console_scripts =
#     fibonacci = shillelagh.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov shillelagh --cov-report=term-missing:skip-covered
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
pythonpath = src

[coverage:report]
fail_under = 100

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.2.3
package = shillelagh
extensions =
    pre_commit
